# Copyright (C) 2014 Embecosm Limited.

# Contributor Pierre Langlois <pierre.langlois@embecosm.com>

# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3 of the License, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.

# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

global benchmarks
global objdir
global srcdir

set energy_data $env(ENERGY_DATA)
set measurement_timeout $env(TIMEOUT)

proc energytool_spawn { serial point pin } {
    global srcdir
    return [eval remote_spawn host \{ "$srcdir/tools/energytool.py $serial $point $pin" \} ]
}

set energy_log [open $energy_data w]
puts $energy_log "name,energy,time,avg_power,avg_current,avg_voltage"
close $energy_log

foreach benchmark $benchmarks {
    # Launch energytool
    set energy_output ""
    set energytool_id [energytool_spawn "$env(ENERGYTOOL_SERIAL)" "$env(ENERGYTOOL_POINT)" "$env(ENERGYTOOL_PIN)"]

    # Launch benchmark
    beebs_load "$objdir/src/$benchmark/$benchmark" ""

    expect {
        -i $energytool_id -timeout $measurement_timeout -re "(\[0-9\.e\-\]+,){4}\[0-9\.e\-\]+" {
            set energy_output $expect_out(buffer)
        }
        timeout {}
        eof {}
    }

    verbose -log "Energy for $benchmark: $energy_output"
    set energy_log [open $energy_data a]
    if { $energy_output == "" } {
        # Output zeros if the measurement was unsuccessful.
        puts $energy_log "$benchmark,0,0,0,0,0"
    } else {
        puts $energy_log "$benchmark,$energy_output"
    }
    close $energy_log
}
