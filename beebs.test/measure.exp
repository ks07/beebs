global benchmarks
global objdir
global srcdir

set energy_data $env(ENERGY_DATA)
set measurement_timeout $env(TIMEOUT)

proc energytool_spawn { serial point pin } {
    global srcdir
    #return [eval remote_spawn host \{ "$srcdir/tools/energytool.py $serial $point $pin" \} ]
    return [eval remote_spawn host \{ "energytool -m $point read $serial $pin" \} ]
}

#set energy_log [open $energy_data w]
#puts $energy_log "name,energy,time,avg_power,avg_current,avg_voltage"
#close $energy_log

foreach benchmark $benchmarks {
    # Launch benchmark
    beebs_load "$objdir/src/$benchmark/$benchmark" ""

    # Launch energytool
    set energy_output ""
    set energytool_id [energytool_spawn "$env(ENERGYTOOL_SERIAL)" "$env(ENERGYTOOL_POINT)" "$env(ENERGYTOOL_PIN)"]

    set state [remote_wait host $measurement_timeout]
    set energy_output [lindex $state 1]

    verbose -log "Energy for $benchmark: $energy_output"
    set energy_log [open $energy_data a]
    if { $energy_output == "" } {
        # Output zeros if the measurement was unsuccessful.
        puts $energy_log "No energy for $benchmark"
    } else {
        puts $energy_log "Energy for $benchmark\n$energy_output"
    }
    close $energy_log
}
